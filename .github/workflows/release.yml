name: Release
on:
  push:
    branches:
      - beta
  # workflow_run:
  #   workflows:
  #     - CI
  #   branches:
  #     # - main
  #     - beta
  #   types:
  #     - completed

env:
  HUSKY: 0
  FORCE_COLOR: 3

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    #if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Generate timestamp
        id: timestamp
        run: echo "timestamp=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: pnpm

      # Note: we do not use an external Turbo cache for publishing
      # to prevent against possible cache collision attacks.

      - name: Install dependencies
        run: pnpm install

      # NPM release --

      - name: Build (NPM)
        run: pnpm build:npm

      - name: Release (NPM)
        run: pnpm release:npm

      # Docker release --

      # When the server package is published to NPM,
      # the internal @e2esdk/semantic-release plugin
      # will store the new version number into the
      # `server-was-published` file at the repo root.
      # We detect its presence and store the version
      # in a step output, which will determine whether
      # the Docker build+push step occurs or not.
      - name: Get server version
        id: server-pkg
        run: test -f server-was-published && echo "version=$(cat server-was-published)" >> $GITHUB_OUTPUT | true

      - name: Docker registry authentication
        uses: docker/login-action@v2
        if: ${{ steps.server-pkg.outputs.version }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # todo: Use docker/metadata-action to organise tags & labels
      - name: Build & Publish (Docker)
        uses: docker/build-push-action@v3
        if: ${{ steps.server-pkg.outputs.version }}
        with:
          context: .
          file: packages/server/Dockerfile
          build-args: |
            BUILD_URL=https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
          labels: |
            org.opencontainers.image.title=@e2esdk/server
            org.opencontainers.image.description=End-to-end encryption server
            org.opencontainers.image.version=${{ steps.server-pkg.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.timestamp.outputs.timestamp }}
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.source=https//github.com/SocialGouv/e2esdk/tree/${{ github.sha }}
            org.opencontainers.image.documentation=https://github.com/SocialGouv/e2esdk/blob/main/packages/server/README.md
          tags: |
            ghcr.io/socialgouv/e2esdk/server:${{ steps.server-pkg.outputs.version }}
            ghcr.io/socialgouv/e2esdk/server:sha-${{ github.sha }}
          push: true

      - name: Display Docker image labels
        if: ${{ steps.server-pkg.outputs.version }}
        run: |
          docker inspect e2esdk/server:sha-${{ github.sha }} --format='{{json .Config.Labels}}' \
          | sed \
            -e 's/^{"//' -e 's/"}$//' \
            -e 's/\",\"/\n/g'         \
            -e 's/":"/: /g'
        # 1. Drop the object curly braces (and surrounding quotes)
        # 2. Replace entry separators by newlines (and drop surrounding quotes)
        # 3. Replace key:value separators with spaces (and drop surrounding quotes)
